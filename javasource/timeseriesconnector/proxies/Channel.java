// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package timeseriesconnector.proxies;

public class Channel
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject channelMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TimeSeriesConnector.Channel";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		key("key"),
		measurementInterval("measurementInterval"),
		Channel_Asset("TimeSeriesConnector.Channel_Asset");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Channel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "TimeSeriesConnector.Channel"));
	}

	protected Channel(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject channelMendixObject)
	{
		if (channelMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("TimeSeriesConnector.Channel", channelMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a TimeSeriesConnector.Channel");

		this.channelMendixObject = channelMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Channel.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static timeseriesconnector.proxies.Channel initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return timeseriesconnector.proxies.Channel.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static timeseriesconnector.proxies.Channel initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new timeseriesconnector.proxies.Channel(context, mendixObject);
	}

	public static timeseriesconnector.proxies.Channel load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return timeseriesconnector.proxies.Channel.initialize(context, mendixObject);
	}

	public static java.util.List<timeseriesconnector.proxies.Channel> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<timeseriesconnector.proxies.Channel> result = new java.util.ArrayList<timeseriesconnector.proxies.Channel>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//TimeSeriesConnector.Channel" + xpathConstraint))
			result.add(timeseriesconnector.proxies.Channel.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of key
	 */
	public final String getkey()
	{
		return getkey(getContext());
	}

	/**
	 * @param context
	 * @return value of key
	 */
	public final String getkey(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.key.toString());
	}

	/**
	 * Set value of key
	 * @param key
	 */
	public final void setkey(String key)
	{
		setkey(getContext(), key);
	}

	/**
	 * Set value of key
	 * @param context
	 * @param key
	 */
	public final void setkey(com.mendix.systemwideinterfaces.core.IContext context, String key)
	{
		getMendixObject().setValue(context, MemberNames.key.toString(), key);
	}

	/**
	 * @return value of measurementInterval
	 */
	public final Integer getmeasurementInterval()
	{
		return getmeasurementInterval(getContext());
	}

	/**
	 * @param context
	 * @return value of measurementInterval
	 */
	public final Integer getmeasurementInterval(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (Integer) getMendixObject().getValue(context, MemberNames.measurementInterval.toString());
	}

	/**
	 * Set value of measurementInterval
	 * @param measurementinterval
	 */
	public final void setmeasurementInterval(Integer measurementinterval)
	{
		setmeasurementInterval(getContext(), measurementinterval);
	}

	/**
	 * Set value of measurementInterval
	 * @param context
	 * @param measurementinterval
	 */
	public final void setmeasurementInterval(com.mendix.systemwideinterfaces.core.IContext context, Integer measurementinterval)
	{
		getMendixObject().setValue(context, MemberNames.measurementInterval.toString(), measurementinterval);
	}

	/**
	 * @return value of Channel_Asset
	 */
	public final timeseriesconnector.proxies.Asset getChannel_Asset() throws com.mendix.core.CoreException
	{
		return getChannel_Asset(getContext());
	}

	/**
	 * @param context
	 * @return value of Channel_Asset
	 */
	public final timeseriesconnector.proxies.Asset getChannel_Asset(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		timeseriesconnector.proxies.Asset result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Channel_Asset.toString());
		if (identifier != null)
			result = timeseriesconnector.proxies.Asset.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Channel_Asset
	 * @param channel_asset
	 */
	public final void setChannel_Asset(timeseriesconnector.proxies.Asset channel_asset)
	{
		setChannel_Asset(getContext(), channel_asset);
	}

	/**
	 * Set value of Channel_Asset
	 * @param context
	 * @param channel_asset
	 */
	public final void setChannel_Asset(com.mendix.systemwideinterfaces.core.IContext context, timeseriesconnector.proxies.Asset channel_asset)
	{
		if (channel_asset == null)
			getMendixObject().setValue(context, MemberNames.Channel_Asset.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Channel_Asset.toString(), channel_asset.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return channelMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final timeseriesconnector.proxies.Channel that = (timeseriesconnector.proxies.Channel) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "TimeSeriesConnector.Channel";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
